---
- name: Transferencia de Banco de Dados OJS 
  hosts: hajaes
  become: true
  vars_files:
    - vars.yml
  tasks:
    - name: Verificar se o usuario ja existe
      shell: |
        sudo mysql -NBe "SELECT EXISTS(SELECT 1 FROM mysql.user WHERE user = '{{ db_user }}')"
      register: usuario_existe_raw
      changed_when: false

    - name: Definir variavel booleana com base no resultado da consulta
      set_fact:
        usuario_existe: "{{ usuario_existe_raw.stdout == '1' }}"

    - name: Criar usuario do banco se nao existir
      shell: |
        sudo mysql -e "CREATE USER '{{ db_user }}'@'localhost' IDENTIFIED BY '{{ db_pass }}'; GRANT ALL PRIVILEGES ON *.* TO '{{ db_user }}'@'localhost'; FLUSH PRIVILEGES;"
      when: not usuario_existe

- name: Dump e transferencia com medicao
  hosts: localhost
  gather_facts: false
  vars_files:
    - vars.yml
  vars:
    dump_path: /home/ansible/dump_db.sql
    log_file: /home/ansible/copia_banco.log
    time_file: /home/ansible/copia_banco_time.log
    perf_file: /home/ansible/copia_banco_perf.log
    remote_path: /home/ansible/dump_db.sql
  tasks:
    - name: Carregar informacoes do host ajaes
      set_fact:
        ajaes_host: "{{ hostvars['ajaes'] }}"

    - name: Carregar informacoes do host hajaes
      set_fact:
        hajaes_host: "{{ hostvars['hajaes'] }}"

    - name: Registrar horario de inicio da copia
      shell: 'date "+[INFO] Inicio da copia do banco: %Y-%m-%d %H:%M:%S" >> "{{ log_file }}"'

    - name: Executar dump e transferencia com perf e time
      shell: >
        echo "[INFO] Iniciando copia com perf e time..." | tee -a "{{ log_file }}";
        perf stat -o "{{ perf_file }}" -- /usr/bin/time -v -o "{{ time_file }}" bash -c '
          ssh -p {{ ajaes_host.ansible_port }} {{ ajaes_host.ansible_user }}@{{ ajaes_host.ansible_host }} "
            mysqldump --quick --single-transaction -u{{ db_user }} -p\"{{ db_pass }}\" {{ db_name }} > {{ dump_path }} &&
            sed -i \"s/utf8mb4_0900_ai_ci/utf8mb4_general_ci/g\" {{ dump_path }} &&
            chmod 644 {{ dump_path }}"
          &&
          scp -P {{ ajaes_host.ansible_port }} {{ ajaes_host.ansible_user }}@{{ ajaes_host.ansible_host }}:{{ dump_path }} {{ dump_path }} &&
          scp {{ dump_path }} {{ hajaes_host.ansible_user }}@{{ hajaes_host.ansible_host }}:{{ remote_path }}'
      args:
        executable: /bin/bash

    - name: Registrar horario de fim da copia
      shell: 'date "+[INFO] Fim da copia do banco: %Y-%m-%d %H:%M:%S" >> "{{ log_file }}"'

- name: Restaurar dump no hajaes com medicao
  hosts: localhost
  gather_facts: false
  vars_files:
    - vars.yml
  vars:
    restore_log: /home/ansible/restauracao_banco.log
    restore_time: /home/ansible/restauracao_time.log
    restore_perf: /home/ansible/restauracao_perf.log
    remote_path: /home/ansible/dump_db.sql
  tasks:
    - name: Carregar informacoes do host hajaes
      set_fact:
        hajaes_host: "{{ hostvars['hajaes'] }}"

    - name: Registrar horario de inicio da restauracao
      shell: 'date "+[INFO] Inicio da restauracao: %Y-%m-%d %H:%M:%S" >> "{{ restore_log }}"'

    - name: Executar restauracao com perf e time via SSH
      shell: >
        echo "[INFO] Iniciando restauracao com perf e time..." | tee -a "{{ restore_log }}";
        perf stat -o "{{ restore_perf }}" -- /usr/bin/time -v -o "{{ restore_time }}" \
        ssh {{ hajaes_host.ansible_user }}@{{ hajaes_host.ansible_host }} "
          sudo mysql -e 'CREATE DATABASE IF NOT EXISTS {{ db_name }} CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;' &&
          sudo mysql {{ db_name }} < {{ remote_path }}"
      args:
        executable: /bin/bash

    - name: Registrar horario de fim da restauracao
      shell: 'date "+[INFO] Fim da restauracao: %Y-%m-%d %H:%M:%S" >> "{{ restore_log }}"'

- name: Remover dump da maquina origem (ajaes)
  hosts: ajaes
  become: true
  tasks:
    - name: Apagar dump em ajaes
      file:
